name: Spigot Deployer
description: Build a Spigot plugin and deploy it to a server, including version management.
inputs:
  beta:
    description: 'Whether to deploy as a beta version.'
    required: false
    default: "false"
  repository:
    description: 'The repository to check for the latest tag.'
    required: true
  github_token:
    description: 'The GitHub token to use for deleting tags and releases.'
    required: true
  panel_api_key:
    description: 'The Pterodactyl API key to use for deploying the plugin.'
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        gradle-version: 8.4

    - name: Get latest version
      if: ${{ inputs.beta == 'true' }}
      uses: oprypin/find-latest-tag@v1
      id: latest_tag
      continue-on-error: true
      with:
        repository: ${{ inputs.repository }}
        releases-only: true
        prefix: 'beta-'

    - name: Increment version
      uses: fr3qu3ncy-dev/gradle-version-incrementer@main
      if: ${{ inputs.beta == 'true' }}
      id: incrementer
      with:
        latest_release: ${{ steps.latest_tag.outputs.tag }}

    - name: Save current version
      if: ${{ inputs.beta == 'true' }}
      shell: bash
      run: echo "new_number=${{ steps.incrementer.outputs.new_number }}" >> $GITHUB_ENV

    - name: Build with Gradle
      shell: bash
      run: gradle release

    - uses: dev-drprasad/delete-tag-and-release@v1.0
      if: ${{ inputs.beta == 'true' }}
      continue-on-error: true
      with:
        tag_name: ${{ steps.latest_tag.outputs.tag }}
        github_token: ${{ inputs.github_token }}

    - name: Retrieve Version
      shell: bash
      run: |
        echo "::set-output name=VERSION_NAME::$(gradle -q printVersionName)"
      id: new_version

    - name: Get version
      shell: bash
      run: |
        echo "version_name=${{steps.new_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV

    - name: Create Beta Release
      uses: softprops/action-gh-release@v2
      if: ${{ inputs.beta == 'true' }}
      with:
        files: "build/libs/*.jar"
        tag_name: "beta-${{ env.NEW_NUMBER }}"
        name: "${{ env.VERSION_NAME }} Beta ${{ env.NEW_NUMBER }}"
        prerelease: true

    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: ${{ inputs.beta == 'false' }}
      with:
        files: "build/libs/*.jar"
        tag_name: ${{ env.VERSION_NAME }}
        name: ${{ env.VERSION_NAME }}
        prerelease: false

    - uses: dev-drprasad/delete-older-releases@v0.2.0
      if: ${{ inputs.beta == 'true' }}
      with:
        keep_latest: 10
        delete_tag_pattern: "beta-"
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Pterodactyl Deploy
      uses: fr3qu3ncy-dev/pterodactyl-deployer@main
      with:
        api_key: ${{ inputs.panel_api_key }}